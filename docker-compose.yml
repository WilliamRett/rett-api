version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: rett-postgres
    environment:
      POSTGRES_DB: rett
      POSTGRES_USER: rett
      POSTGRES_PASSWORD: rett1234
    ports:
      - "127.0.0.1:5433:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./docker/postgres/initdb:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"$${POSTGRES_USER}\" -d \"$${POSTGRES_DB}\" -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped
    networks: [stack]

  redis:
    image: redis:7-alpine
    container_name: rett-redis
    ports:
      - "127.0.0.1:6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped
    networks: [stack]

  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    image: rett/php-app
    container_name: rett-app
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks: [stack]

  queue:
    image: rett/php-app
    container_name: rett-queue
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    depends_on:
      - app
    command: ["php", "artisan", "queue:work", "--tries=3", "--backoff=3"]
    restart: unless-stopped
    networks: [stack]

  nginx:
    image: nginx:1.27-alpine
    container_name: rett-nginx
    ports:
      - "127.0.0.1:8000:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks: [stack]

volumes:
  dbdata:
  redisdata:

networks:
  stack:
    driver: bridge
